unit main;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ComCtrls, ExtCtrls, StdCtrls, DBGrids, Grids, DBGridEh, Buttons, common,
  Menus , DB;

type
  Tfrm_main = class(TForm)
    Panel1: TPanel;
    Lab_Fielter: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    BtnClose: TBitBtn;
    BtnRefresh: TBitBtn;
    BtnExportToExcel: TBitBtn;
    BtnQuery: TBitBtn;
    BtnFieldsVisable: TBitBtn;
    Edt_Fielter: TEdit;
    Edit2: TEdit;
    UpDown1: TUpDown;
    PageControl1: TPageControl;
    TabSheet1: TTabSheet;
    DBGridEh1: TDBGridEh;
    TabSheet2: TTabSheet;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    Label10: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label12: TLabel;
    Label11: TLabel;
    Edt_DeviNumb: TEdit;
    Edt_DEPT_NAME: TEdit;
    Edt_FASSET_NAME: TEdit;
    Edt_ABBR_NAME: TEdit;
    Edt_Impact: TEdit;
    Edt_equipment_grade: TEdit;
    Edt_LOCATION: TEdit;
    Edt_DeviType: TEdit;
    Edt_MainCycl: TEdit;
    Edt_StarMainTime: TEdit;
    Edt_ActuCompTime: TEdit;
    Edt_TimeCons: TEdit;
    Edt_StdTimeCons: TEdit;
    Edt_Acomplish: TEdit;
    Edt_MainImpl: TEdit;
    meno_Remark: TMemo;
    Edt_User_Full_Name: TEdit;
    DateTimePicker1: TDateTimePicker;
    Edt_d840_Location: TEdit;
    Edt_MainExecStat: TEdit;
    CheckBox8: TCheckBox;
    DBGrid1: TDBGrid;
    Panel3: TPanel;
    GroupBox1: TGroupBox;
    CheckBox1: TCheckBox;
    CheckBox5: TCheckBox;
    CheckBox3: TCheckBox;
    CheckBox2: TCheckBox;
    GroupBox2: TGroupBox;
    Cbb_WareHouse: TComboBox;
    RadioGroup1: TRadioGroup;
    RadioGroup2: TRadioGroup;
    StatusBar1: TStatusBar;
    PopupMenu1: TPopupMenu;
    N1: TMenuItem;
    N13: TMenuItem;
    N2: TMenuItem;
    N3: TMenuItem;
    N4: TMenuItem;
    N9: TMenuItem;
    Panel2: TPanel;
    Edit7: TEdit;
    Label24: TLabel;
    Edit9: TEdit;
    Label26: TLabel;
    Edit8: TEdit;
    Label25: TLabel;
    procedure BtnCloseClick(Sender: TObject);
    procedure BtnRefreshClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BtnExportToExcelClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure PageControl1Change(Sender: TObject);
    procedure DBGridEh1GetCellParams(Sender: TObject; Column: TColumnEh;
      AFont: TFont; var Background: TColor; State: TGridDrawState);
    procedure DBGridEh1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBGridEh1TitleClick(Column: TColumnEh);
    procedure DBGridEh1ColumnMoved(Sender: TObject; FromIndex,
      ToIndex: Integer);
    procedure BtnFieldsVisableClick(Sender: TObject);
    procedure Edt_FielterChange(Sender: TObject);
    procedure UpDown1ChangingEx(Sender: TObject; var AllowChange: Boolean;
      NewValue: Smallint; Direction: TUpDownDirection);
    procedure BtnQueryClick(Sender: TObject);
    procedure CheckBox1Click(Sender: TObject);
    procedure Cbb_WareHouseChange(Sender: TObject);
    procedure RadioGroup1Click(Sender: TObject);
    procedure RadioGroup2Click(Sender: TObject);
    procedure CheckBox8Click(Sender: TObject);
    procedure DateTimePicker1Exit(Sender: TObject);
    procedure PopupMenu1Popup(Sender: TObject);
    procedure Edt_MainImplExit(Sender: TObject);
    procedure meno_RemarkExit(Sender: TObject);
    procedure N1Click(Sender: TObject);
    procedure N13Click(Sender: TObject);
    procedure N2Click(Sender: TObject);
    procedure N3Click(Sender: TObject);
    procedure N4Click(Sender: TObject);
    procedure N9Click(Sender: TObject);
  private
    PreColumn :TColumnEh;
    sql_text,ssql, strStatusValue,ware_house,strStatus :string;
    function find_error(v_rkey,v_status:Integer):Boolean;
    procedure StartMaintenance(vEmpl_ptr:string);
    procedure Acceptanceby(UserKey:string);
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frm_main: Tfrm_main;

implementation

uses damo, QuerySet, ColsDisplaySet_unt, formMultiSelectedItem;

{$R *.dfm}

procedure Tfrm_main.BtnCloseClick(Sender: TObject);
begin
  Application.Terminate;
end;

procedure Tfrm_main.BtnRefreshClick(Sender: TObject);
var
  rkey831:Integer;
begin
  rkey831 := DM.ADS831rkey.Value;
  with DM.ADS831 do
  begin
    Close;
    Open;
  end;
  if rkey831 >0 then
  DM.ADS831.Locate('rkey',rkey831,[]);

end;

procedure Tfrm_main.FormCreate(Sender: TObject);
begin
  if not App_init_2(dm.ADOConnection1) then
  begin
    showmsg('程序起动失败请联系管理员!',1);
    application.Terminate;
    exit;
  end;
  self.Caption:=application.Title;
//  rkey73:='2551';
//  user_ptr := '3054';
//  vprev := '4';
end;

procedure Tfrm_main.BtnExportToExcelClick(Sender: TObject);
begin
  if not dm.ADS831.IsEmpty then
  if MessageDlg('您确认导出数据到Excel吗?',mtConfirmation,[mbYes, mbNo],0) =mryes then
    Export_dbGridEH_to_Excel(self.DBGridEh1,self.Caption);
end;

procedure Tfrm_main.FormShow(Sender: TObject);
begin
  PreColumn := DBGridEh1.Columns[1];
//  for i:=1 to DBGrideh1.Columns.Count do
//  begin
//    item := TmenuItem.Create(self) ;
//    item.Caption := dbgrideh1.Columns[i-1].Title.Caption ;
//    if dbgrideh1.Columns[i-1].Visible then
//      item.Checked := true ;
//    item.OnClick := item_click ;
//    self.PopupMenu2.Items.Add(item) ;
//  end;
  sql_text := DM.ADS831.CommandText;
  frmQuerySet.DateTimePicker1.Date := common.getsystem_date(dm.tmp,0)-10;
  frmQuerySet.DateTimePicker2.Date := common.getsystem_date(dm.tmp,0)+400;
  strStatusValue :=' and Data0831.RKEY832 in (1,3,5) ';
  strStatus := ' and d417.active_flag in (3,4) ';
  DM.ADS831.Close;
  dm.ADS831.CommandText := sql_text+strStatusValue+strStatus+ssql+' and (data0831.PlanMainDate >= '+quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker1.Date))+ ')'
    +' and (data0831.PlanMainDate <='+ quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker2.Date+1))+')';
  
  DM.ADS831.Open;
  
  with  DM.tmp do
  begin
    Close;
    SQL.Text := 'select RKEY,WAREHOUSE_CODE,ABBR_NAME from data0015';
    Open;
    First;
    while not Eof do
    begin
      Cbb_WareHouse.Items.Add(Trim(FieldByName('ABBR_NAME').AsString));
      Next;
    end;
    Cbb_WareHouse.Items.Add('全部');
    Cbb_WareHouse.ItemIndex := Cbb_WareHouse.Items.Count-1;
  end;
  PageControl1.ActivePage := TabSheet1;
  ResetGridColumns(Self,DM.ADOConnection1,StrToInt(rkey73),StrToInt(vprev)=2);
  DBGridEh1.FrozenCols := 5;
 
end;

procedure Tfrm_main.PageControl1Change(Sender: TObject);
begin
  BtnRefresh.Click;
  if (PageControl1.ActivePageIndex=1) and (not DM.ADs831.IsEmpty) and(CheckBox8.Checked) then
  begin
    DM.ADs468.Close;
    DM.ADs468.Parameters[0].Value:=DM.ADS831rkey.Value;
    DM.ADs468.Open;
  end;
  DateTimePicker1.Date := DM.ADS831PlanMainDate.Value;
  Edt_DeviNumb.Text := DM.ADS831DeviNumb.Value;
  Edt_DEPT_NAME.Text := DM.ADS831DEPT_NAME.Value;
  Edt_FASSET_NAME.Text := DM.ADS831FASSET_NAME.Value;
  Edt_ABBR_NAME.Text := DM.ADS831ABBR_NAME.Value;
  Edt_Impact.Text := DM.ADS831Impact.Value;
  Edt_equipment_grade.Text := DM.ADS831equipment_grade.Value;
  Edt_LOCATION.Text := DM.ADS831LOCATION.Value;
  Edt_DeviType.Text := DM.ADS831DeviType.Value;
  Edt_MainCycl.Text := DM.ADS831MainCycl.Value;
  Edt_MainExecStat.Text := DM.ADS831MainExecStat.Value;
  Edt_d840_Location.Text := DM.ADS831d840_Location.Value;
  Edt_StarMainTime.Text := DM.ADS831StarMainTime.AsString;
  Edt_ActuCompTime.Text := DM.ADS831ActuCompTime.AsString;
  Edt_TimeCons.Text := DM.ADS831TimeCons.AsString;
  Edt_StdTimeCons.Text := DM.ADS831StdTimeCons.AsString;
  Edt_Acomplish.Text :=DM.ADS831Acomplish.Value;

//  if (dm.ADS831TimeCons.AsFloat <>0) and (Edt_StdTimeCons.Text <> '')then
//    Edt_Acomplish.Text :=FormatFloat('0.00',DM.ADS831StdTimeCons.Value/dm.ADS831TimeCons.AsFloat*100)+'%'
//  else
//    Edt_Acomplish.Text := '';

  Edt_MainImpl.Text := DM.ADS831MainImpl.Value;
  Edt_User_Full_Name.Text := DM.ADS831User_Full_Name.Value;
  meno_Remark.Lines.Text := DM.ADS831Remarks.Value;
  if StrToInt(vprev) in [3,4] then
  begin
    if DM.ADS831RKEY832.Value=1 then
    begin
      DateTimePicker1.Enabled :=True;
    end
    else
    begin
      DateTimePicker1.Enabled :=False;
    end;
  end
  else
  begin
    DateTimePicker1.Enabled :=False;
  end;
  if StrToInt(vprev) in [2,3,4]  then
  begin
    if DM.ADS831RKEY832.Value=3 then      //只有执行中 才能修改保养记录描述
    begin
      meno_Remark.Enabled:=True;
      Edt_MainImpl.Enabled := True;
    end
    else
    begin
      meno_Remark.Enabled := False;
      Edt_MainImpl.Enabled := False;
    end;
    if DM.ADS831RKEY832.Value in [1,3,4,5,6] then  //待执行（1），执行中，待验收，已通知，已暂停 状态可修改标准消耗时间
    begin
      Edt_StdTimeCons.Enabled := True;
    end
    else
    begin
      Edt_StdTimeCons.Enabled := False;
    end;
  end
  else
  begin
    Edt_StdTimeCons.Enabled := False;
    meno_Remark.Enabled := False;
  end;
end;

procedure Tfrm_main.DBGridEh1GetCellParams(Sender: TObject;
  Column: TColumnEh; AFont: TFont; var Background: TColor;
  State: TGridDrawState);
begin
  if DM.ADS831RKEY832.Value=1 then
  begin
    if (DM.ADS831PlanMainDate.AsDateTime <= Date) then
    begin
      AFont.Color :=clRed ;
    end
    else if (DM.ADS831PlanMainDate.AsDateTime =Date +1) then
    begin
      AFont.Color :=clBlue;
    end;
  end
  else if DM.ADS831RKEY832.Value=6 then
  begin
    AFont.Color := clGreen;
  end;
end;

procedure Tfrm_main.DBGridEh1KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if (Char(Key)='V') and (ssalt in Shift) then
    ShowMessage(DM.ADS831.CommandText);
end;

procedure Tfrm_main.DBGridEh1TitleClick(Column: TColumnEh);
begin
  if (Column.Title.SortMarker= smDownEh) or (Column.Title.SortMarker = smNoneEh) then
  begin
    Column.Title.SortMarker := smUpEh;
    DM.ADS831.IndexFieldNames := Column.FieldName;
  end
  else
  begin
    Column.Title.SortMarker := smDownEh;
    DM.ADS831.IndexFieldNames := Column.FieldName+' DESC';
  end;

  if (PreColumn.FieldName<>Column.FieldName) and (Column.Field.DataType in [ftString,ftWideString]) then
  begin
    Lab_Fielter.Caption := Column.Title.Caption;
    Edt_Fielter.SetFocus;
    PreColumn.Title.Color := clBtnFace;
    Column.Title.Color := clRed;
    PreColumn := Column;
    Edt_Fielter.Left := Lab_Fielter.Left + Lab_Fielter.Width + 5 ;
  end
  else
  Edt_Fielter.SetFocus;
end;

procedure Tfrm_main.DBGridEh1ColumnMoved(Sender: TObject; FromIndex,
  ToIndex: Integer);
begin
  SaveColsInfo(Self,StrToInt(rkey73));
end;

procedure Tfrm_main.BtnFieldsVisableClick(Sender: TObject);
begin
  show_ColsDisplaySet_frm (Self,DBGridEh1,StrToInt(rkey73)) ;
end;

procedure Tfrm_main.Edt_FielterChange(Sender: TObject);
begin
  if Trim(Edt_Fielter.Text)<>'' then
    DBGridEh1.DataSource.DataSet.Filter := PreColumn.FieldName+' like ''%'+ Trim(Edt_Fielter.Text)+'%'''
  else
    DBGridEh1.DataSource.DataSet.Filter :='';
end;

procedure Tfrm_main.UpDown1ChangingEx(Sender: TObject;
  var AllowChange: Boolean; NewValue: Smallint;
  Direction: TUpDownDirection);
begin
  dbgrideh1.FrozenCols := newvalue;
end;

procedure Tfrm_main.BtnQueryClick(Sender: TObject);
var
  i:integer;
begin
  if frmQuerySet.ShowModal=mrok then
  begin
    DM.ADS831.Close;
    DM.ADS831.CommandText := sql_text;
    ssql :='';
    for i:=1 to frmQuerySet.SGrid1.RowCount-2 do
    ssql := ssql+ frmQuerySet.SGrid1.Cells[2,i]+#13;
    dm.ADS831.CommandText := sql_text+strStatusValue+strStatus+ssql+ware_house+' and (data0831.PlanMainDate >= '+quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker1.Date))+
    ') and (data0831.PlanMainDate <='+ quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker2.Date+1))+')';
    DM.ADS831.Open;
  end;

end;

procedure Tfrm_main.CheckBox1Click(Sender: TObject);
begin
  strStatusValue :='';
  if CheckBox1.Checked then
    strStatusValue := '1,';
  if CheckBox2.Checked then
    strStatusValue:=strStatusValue+'2,';
  if CheckBox3.Checked then
    strStatusValue:=strStatusValue+'3,';
  if CheckBox5.Checked then
    strStatusValue:=strStatusValue+'5,';

  //1待执行3执行中4待验收 2已验收5已通知6已暂停

  if strStatusValue <> '' then
    strStatusValue := ' and Data0831.RKEY832 in ('+copy(strStatusValue,0,Length(strStatusValue)-1)+')'+#13
  else
    strStatusValue := ' and Data0831.RKEY832 in (9)'+#13;

  With DM.ADS831 do
  begin
    Close;
    dm.ADS831.CommandText := sql_text+strStatusValue+strStatus+ssql+ware_house+' and (data0831.PlanMainDate >= '+quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker1.Date))+
    ') and (data0831.PlanMainDate <='+ quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker2.Date+1))+')';
    Open;
  end;
end;

procedure Tfrm_main.Cbb_WareHouseChange(Sender: TObject);
begin
  if Cbb_WareHouse.Text='全部' then
    ware_house:=''
  else
    ware_house := ' and d15.ABBR_NAME ='+ QuotedStr(Cbb_WareHouse.Text);
  DM.ADS831.Close;
  DM.ADS831.CommandText := sql_text+ssql+strStatusValue+strStatus +ware_house+' and (data0831.PlanMainDate >= '+quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker1.Date))+
    ') and (data0831.PlanMainDate <='+ quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker2.Date+1))+')';
  DM.ADS831.Open;
end;

procedure Tfrm_main.RadioGroup1Click(Sender: TObject);
begin
  if RadioGroup1.ItemIndex=0 then
  begin
    frmQuerySet.DateTimePicker1.Date := common.getsystem_date(dm.tmp,0)-10;
    frmQuerySet.DateTimePicker2.Date := common.getsystem_date(dm.tmp,0);
  end
  else if RadioGroup1.ItemIndex=1 then
  begin
    frmQuerySet.DateTimePicker1.Date := common.getsystem_date(dm.tmp,0)+1;
    frmQuerySet.DateTimePicker2.Date := common.getsystem_date(dm.tmp,0)+1;
  end
  else if RadioGroup1.ItemIndex=2 then
  begin
    frmQuerySet.DateTimePicker1.Date := common.getsystem_date(dm.tmp,0)+2;
    frmQuerySet.DateTimePicker2.Date := common.getsystem_date(dm.tmp,0)+2;
  end
  else if RadioGroup1.ItemIndex=3 then
  begin
    frmQuerySet.DateTimePicker1.Date := common.getsystem_date(dm.tmp,0)-10;
    frmQuerySet.DateTimePicker2.Date := common.getsystem_date(dm.tmp,0)+400;
  end;
  With DM.ADS831 do
  begin
    Close;
    dm.ADS831.CommandText := sql_text+strStatusValue+strStatus+ssql+ware_house+' and (data0831.PlanMainDate >= '+quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker1.Date))+
    ') and (data0831.PlanMainDate <='+ quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker2.Date))+')';
    Open;
  end;
end;

procedure Tfrm_main.RadioGroup2Click(Sender: TObject);
begin
  if RadioGroup2.ItemIndex=0 then
  begin
    strStatus := ' and d417.active_flag in (3,4) ';
  end
  else if RadioGroup2.ItemIndex=1 then
  begin
    strStatus := ' and d417.active_flag in (1,2,3,4,5,6,7) ';
  end ;
  With DM.ADS831 do
  begin
    Close;
    dm.ADS831.CommandText := sql_text+strStatusValue+strStatus+ssql+ware_house+' and (data0831.PlanMainDate >= '+quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker1.Date))+
    ') and (data0831.PlanMainDate <='+ quotedstr(formatdatetime('YYYY-MM-DD',frmQuerySet.DateTimePicker2.Date))+')';
    Open;
  end;
end;

procedure Tfrm_main.CheckBox8Click(Sender: TObject);
begin
  with DM.ADS468 do
  if  CheckBox8.Checked then
  begin
    if Parameters.ParamByName('vD831_ptr').Value<>DM.ADS831rkey.Value then
    begin
      Close;
      Parameters.ParamByName('vD831_ptr').Value:=DM.ADS831rkey.Value;
      Open;
    end
    else
      Open;
  end
  else
    Close;
end;

procedure Tfrm_main.DateTimePicker1Exit(Sender: TObject);
begin
  with DM.tmp do
  begin
    Close;
    SQL.Text := 'update data0831 set PlanMainDate='+quotedstr(formatdatetime('YYYY-MM-DD',DateTimePicker1.Date))+' where rkey='+dm.ADS831rkey.AsString;
    ExecSQL;
  end;
end;

procedure Tfrm_main.PopupMenu1Popup(Sender: TObject);
begin
  N1.Enabled := (StrToInt(vprev)in [3,4]) ;
  N13.Enabled := (StrToInt(vprev)in [3,4]) and (DM.ADS831RKEY832.Value in [1]);
  N2.Enabled := (StrToInt(vprev)in [2,3,4]) and (DM.ADS831RKEY832.Value in [1]);
  N3.Enabled := (StrToInt(vprev)in [2,3,4]) and (DM.ADS831RKEY832.Value in [5]);
  N4.Enabled := (StrToInt(vprev)in [2,3,4]) and (DM.ADS831RKEY832.Value in [5]);
  N9.Enabled := (StrToInt(vprev)in [4]) and (DM.ADS831RKEY832.Value in [3]);
end;

procedure Tfrm_main.Edt_MainImplExit(Sender: TObject);
begin
  with DM.tmp do
  begin
    Close;
    SQL.Text := 'update data0831 set MainImpl='+QuotedStr(Edt_MainImpl.Text)+' where rkey='+dm.ADS831rkey.AsString;
    ExecSQL;
  end;
end;

procedure Tfrm_main.meno_RemarkExit(Sender: TObject);
begin
  with DM.tmp do
  begin
    Close;
    SQL.Text := 'select rkey,remarks from data0831 where rkey='+dm.ADS831rkey.AsString;
    Open;
    Edit;
    FieldByName('remarks').Value := meno_Remark.Lines.Text;
    Post;
  end;
end;

procedure Tfrm_main.N1Click(Sender: TObject);
var
  rkey831:Integer;
begin
  frmMultiSelectedItem := TfrmMultiSelectedItem.Create(Application);

  if frmMultiSelectedItem.ShowModal = mrOk then
  begin
    try
      with DM.tmp do
      begin
        DM.ADOConnection1.BeginTrans;
        Close;
        SQL.Text := 'select d417.FASSET_NAME,d832.MainExecStat,d73.User_Full_Name,''定期保养'' as Impact,'+
         'd34.DEPT_NAME,d15.ABBR_NAME,d417.equipment_grade,d417.LOCATION,d840.Location as d840_Location,'+
         'data0831.rkey,data0831.PlanMainDate,data0831.DeviNumb,data0831.DeviType, data0831.MainCycl,'+
         'data0831.RKEY832,data0831.StarMainTime,data0831.ActuCompTime, data0831.MainImpl,data0831.Remarks,'+
         'data0831.TimeCons, data0831.MainAcce_UserPtr,data0831.StdTimeCons'+
         ' from data0831 join data0417 d417 on data0831.DeviNumb=d417.FASSET_CODE'+
         ' join data0034 d34 on d417.DEPT_PTR=d34.rkey join data0015 d15 on d417.warehouse_ptr=d15.rkey'+
         ' join data0832 d832 on data0831.RKEY832=d832.rkey left join data0073 d73 on data0831.MainAcce_UserPtr=d73.rkey'+
         ' left join data0840 d840 on d417.D840_ptr=d840.rkey ';
        Open;
        frmMultiSelectedItem.dt1.First;
        while not frmMultiSelectedItem.dt1.Eof do
        begin
          if frmMultiSelectedItem.Dgh1.FieldColumns['selected'].Field.AsBoolean = True then
          begin
            Append;
            FieldByName('PlanMainDate').Value := frmMultiSelectedItem.dt1.FieldByName('PlanMainDate').Value;
            FieldByName('DeviNumb').Value := frmMultiSelectedItem.dt1.FieldByName('Fasset_Code').Value;
            FieldByName('DeviType').Value := frmMultiSelectedItem.dt1.FieldByName('DeviType').Value;
            FieldByName('MainCycl').Value := frmMultiSelectedItem.dt1.FieldByName('MainCycl').Value;
            FieldByName('RKEY832').Value := 1;
            FieldByName('StdTimeCons').Value := frmMultiSelectedItem.dt1.FieldByName('StdTimeCons').Value;
            Post;
            rkey831:=FieldByName('rkey').Value ;
            DM.ADS831.Close;
            DM.ADS831.Open;
            DM.ADS831.Locate('rkey',rkey831,[]);
            frmMultiSelectedItem.Dt1.Edit;
            frmMultiSelectedItem.Dt1.FieldByName('selected').AsBoolean:=False;
            frmMultiSelectedItem.Dt1.Post;
          end;
          frmMultiSelectedItem.Dt1.Next;
        end;
        DM.ADOConnection1.CommitTrans;
      end;
    except
      on E:Exception do
      begin
        DM.ADOConnection1.RollbackTrans;
        MessageDlg(E.Message,mtError,[mbCancel],0);
      end;
    end;
  end;

end;

procedure Tfrm_main.N13Click(Sender: TObject);
begin
  if (strtoint(vprev)=1) or (strtoint(vprev)=2) then
    messagedlg('对不起!您没有该程序的删除权限',mtinformation,[mbok],0)
  else  

  if MessageDlg('您确定要删除该设备代码吗?',mtConfirmation,[mbYes, mbNo],0) =mryes then
  begin
    try
     with dm.tmp do
     begin
       with DM.tmp do
       begin
         Close;
         SQL.Text := 'delete data0831 where data0831.rkey ='+dm.ADS831rkey.AsString;
         if ExecSQL>0 then
         begin
           common.ShowMsg('删除操作成功！',1);
           self.BtnRefreshClick(Sender);
         end;
       end;
     end;

    except
     on E: Exception do
     begin
       messagedlg(E.Message,mterror,[mbcancel],0);
     end;
    end;
  end;
end;

function Tfrm_main.find_error(v_rkey, v_status: Integer): Boolean;
begin
  with dm.tmp do
  begin
    Close;
    sql.Text:='select rkey from data0831 where rkey='+inttostr(v_rkey)+
              ' and rkey832='+inttostr(v_status);
    open;
  end;
  if dm.tmp.IsEmpty then
    Result:=True
  else
    result:=false;
end;

procedure Tfrm_main.N2Click(Sender: TObject);
var
  i:integer;
  TempTable,UserName:string;
  IsSenderMsg:Boolean;
begin
  if  Self.find_error(dm.ADS831rkey.Value,dm.ADS831RKEY832.Value) then
  begin
    ShowMessage('状态已经改变，请刷新');
    Exit;
  end;
  IsSenderMsg:=True;
  if (DM.ADS831.Active)and(not DM.ADS831.IsEmpty ) then
  begin
    if messagebox(Self.Handle,'你确定要通知相关人员进行保养吗？','询问',MB_yesno+MB_iconquestion)=idNo then
      Exit ;
    TempTable:='##PhoneMsg'+rkey73;   //临时名和登陆用户指针关联，即使不同的用户同时操作，也不会相互影响。
    with DM.tmp do
    begin
      Close;
      SQL.Text :='select rkey,User_FULL_NAME from data0073 where rkey= '+ rkey73;
      Open;
      UserName := FieldByName('User_FULL_NAME').AsString;
    end;
//    with   DghMain.DataSource.DataSet as TClientDataSet  do
    if   DBGridEh1.SelectedRows.Count   >   1   then  //如果用户选择的行数大于1，即多行。
      begin
        try
//          try
//            cdsMain.F_IsBatchOperating :=True;
//            cdsMain.DisableControls;
//            Screen.Cursor := crHourGlass;
          if messagebox(Self.Handle,'需要正常手机短信通知部门负责人该设备要进行例行保养吗？','询问',MB_yesno+MB_iconquestion)= idNo then
            IsSenderMsg:=False;
          DM.ADOConnection1.BeginTrans;

          with DM.ADORead do
          begin
            Close;                                              //临时表已经存在，就将其删除并重新创建
            SQL.Text:='if Exists(select * from tempdb.dbo.sysobjects  where name= '+QuotedStr(TempTable)+' and type= ''U'') '
                      +' drop table '+TempTable+' create table  '+TempTable+' (Phone varchar(15),FASSET_ptr int,Msg varchar(1000)) '
                      +' Create CLUSTERED INDEX INDEX'+TempTable+' ON '+TempTable+' ([Phone],[FASSET_ptr])';
            ExecSQL;
          end;

          for   i:=   DBGridEh1.SelectedRows.Count   -   1   downto   0   do
          begin
            DM.ADS831.GotoBookmark(pointer(DBGridEh1.SelectedRows.Items[i]));
            with DM.tmp do
            begin
              Close;
              SQL.Text :='update data0831 set rkey832 =5 where rkey='+dm.ADS831rkey.AsString;
              ExecSQL;
            end;
            with DM do
            begin
              cmdUpdate.Parameters.ParamByName('v1PlanMainDate').Value:=DateToStr(ADS831.FieldByName('PlanMainDate').Value);
              cmdUpdate.Parameters.ParamByName('v2MainCycl').Value:=ADS831.FieldByName('MainCycl').Value;
              cmdUpdate.Parameters.ParamByName('v3DeviNumb').Value:=ADS831.FieldByName('DeviNumb').Value;
              cmdUpdate.Parameters.ParamByName('v4MainCycl').Value:=ADS831.FieldByName('MainCycl').Value;
              cmdUpdate.Parameters.ParamByName('v5DeviNumb').Value:=ADS831.FieldByName('DeviNumb').Value;
              cmdUpdate.Parameters.ParamByName('v7MainCycl').Value:=ADS831.FieldByName('MainCycl').Value;
              cmdUpdate.Execute;                 //执行该存储过程，生成下一次的保养计划。
            end;

            if   IsSenderMsg=True then
            with DM.ADORead do
            begin
              Close;
              SQL.Text:=                     //将和该设备编号对应部门的对就信息接收人的记录插入临时表中
               'insert into '+TempTable+'(FASSET_ptr,Phone,Msg)'
              +#13+'(select distinct data0417.rkey, data0834.Phone,ABBR_NAME+'' 部门：''+DEPT_NAME+'' 设备代码：''+FASSET_CODE+''，设备名称：''+FASSET_NAME+''，预计'' '
              +#13+' +CONVERT(varchar(100),data0831.PlanMainDate, 23)+''进行保养。''as msg  '
              +#13+'from data0417  '
              +#13+'join data0034 on data0417.Dept_Ptr=data0034.rkey  '
              +#13+'join data0834 on data0834.DeptCode=data0034.Dept_Code and  data0834.warehouse_ptr=data0417.warehouse_ptr   '
              +#13+'join data0831 on data0831.DeviNumb=data0417.Fasset_Code '
              +#13+'join data0015 on data0417.warehouse_ptr=data0015.rkey '
              +#13+'where data0831.rkey=  '+dm.ADS831rkey.AsString+')';
              ExecSQL;
            end;
          end;

          DM.ADOConnection1.CommitTrans;
        except
          on e:Exception do
          begin
            DM.ADOConnection1.RollbackTrans;
            ShowMessage('通知失败！'+#13#10+e.Message);
          end;
        end;
//          finally
//            cdsMain.F_IsBatchOperating :=False;
//            cdsMain.EnableControls;
//            Screen.Cursor := crDefault;
//          end;
        with DM.ADORead do
        begin
          Close;
          SQL.Text:='SELECT distinct  Phone,Msg FROM '+TempTable;
          Open;

          if IsEmpty=False then
          if   IsSenderMsg=True then
          while not Eof do
          begin

            DM.tmp.Close;
            DM.tmp.SQL.Text:=  'insert [172.18.9.10].[WzSmsCenter].dbo.[tblsms_outbox]'+//'insert ['+vSUPLFEDSHIP+'].'+vSUPLFEDMAT+'.dbo.'+vSUPLFEDMISC+
                      '(phonenumber,messagecontent,sendername,companyid) '+
                      'values ('+quotedstr(FieldByName('Phone').AsString)+','+quotedstr(FieldByName('Msg').AsString)+','+quotedstr(UserName)+',9)';
            DM.tmp.ExecSQL;
            Next;
          end;

        end;

      end
    else
      begin
        try
          if messagebox(Self.Handle,'需要正常手机短信通知部门负责人该设备要进行例行保养吗？','询问',MB_yesno+MB_iconquestion)= idNo then
            IsSenderMsg:=False;
//            Screen.Cursor := crHourGlass;
            DM.ADOConnection1.BeginTrans;
          with DM.tmp do
          begin
            Close;
            SQL.Text :='update data0831 set rkey832 = 5 where rkey='+dm.ADS831rkey.AsString;
            ExecSQL;                             //将状态改为“已通知 ”
          end;

          with DM do
          begin
            cmdUpdate.Parameters.ParamByName('v1PlanMainDate').Value:=DateToStr(ADS831.FieldByName('PlanMainDate').Value);
            cmdUpdate.Parameters.ParamByName('v2MainCycl').Value:=ADS831.FieldByName('MainCycl').Value;
            cmdUpdate.Parameters.ParamByName('v3DeviNumb').Value:=ADS831.FieldByName('DeviNumb').Value;
            cmdUpdate.Parameters.ParamByName('v4MainCycl').Value:=ADS831.FieldByName('MainCycl').Value;
            cmdUpdate.Parameters.ParamByName('v5DeviNumb').Value:=ADS831.FieldByName('DeviNumb').Value;
            cmdUpdate.Parameters.ParamByName('v7MainCycl').Value:=ADS831.FieldByName('MainCycl').Value;
            cmdUpdate.Execute;                                   //执行该存储过程，生成下一次的保养计划。
          end;

          DM.ADOConnection1.CommitTrans;
        except
          on e:Exception do
          begin

            DM.ADOConnection1.RollbackTrans;    //跨多个数据库的时候，不能使用事务。
//            cdsMain.Cancel;
//            cdsMain.Refresh;
            ShowMessage('通知失败！'+#13#10+e.Message);
          end;
        end;
          if   IsSenderMsg=True then
          with dm.ADORead do
          begin

            Close;
            SQL.Text:=                     //将和该设备编号对应部门的对就信息接收人的记录插入临时表中
            'select distinct data0834.Phone,ABBR_NAME+'' 部门：''+DEPT_NAME+'' 设备代码：''+FASSET_CODE+''，设备名称：''+FASSET_NAME+''，预计'' '
            +#13+' +CONVERT(varchar(100),data0831.PlanMainDate, 23)+''进行保养。''as msg  '
            +#13+'from data0417  '
            +#13+'join data0034 on data0417.Dept_Ptr=data0034.rkey  '
            +#13+'join data0834 on data0834.DeptCode=data0034.Dept_Code and  data0834.warehouse_ptr=data0417.warehouse_ptr   '
            +#13+'join data0831 on data0831.DeviNumb=data0417.Fasset_Code '
            +#13+'join data0015 on data0417.warehouse_ptr=data0015.rkey '
            +#13+'where data0831.rkey=  '+dm.ADS831rkey.AsString;
            Open;

            while not Eof do
            begin
              DM.tmp.Close;
              DM.tmp.SQL.Text:='insert [172.18.9.10].[WzSmsCenter].dbo.[tblsms_outbox]'//'insert ['+vSUPLFEDSHIP+'].'+vSUPLFEDMAT+'.dbo.'+vSUPLFEDMISC
                        +'(phonenumber,messagecontent,sendername,companyid) '
                        +#13+'values ('+quotedstr(FieldByName('Phone').AsString)+','
                           +quotedstr(FieldByName('Msg').AsString)+','+quotedstr(UserName)+',9)';
              dm.tmp.ExecSQL;

              Next;
            end;

          end;

      end;
//    SetButtonStatus;
//    dsMainStateChange(nil);
  end;
  BtnRefreshClick(sender);

end;

procedure Tfrm_main.N3Click(Sender: TObject);
begin
  if  Self.find_error(dm.ADS831rkey.Value,dm.ADS831RKEY832.Value) then
  begin
    ShowMessage('状态已经改变，请刷新');
    Exit;
  end ;
  with   DM.tmp  do
  if not DM.ADS831.IsEmpty  then
  begin
    if messagebox(Self.Handle,'你确定要取消通知吗？','询问',MB_yesno+MB_iconquestion)=idNo then
      Exit ;
    Close;
    SQL.Text := 'update data0831 set rkey832 =1 where rkey='+dm.ADS831rkey.AsString;
    ExecSQL;                                                 //将状态改为“待执行”
  end;
  BtnRefreshClick(Sender);
end;

procedure Tfrm_main.StartMaintenance(vEmpl_ptr: string);
var
  NowDate:TDateTime;
  vEMPLOYEE_NAME:string;
begin
  try
    Screen.Cursor := crHourGlass;
    if  Self.find_error(dm.ADS831rkey.Value,dm.ADS831RKEY832.Value) then
    begin
      ShowMessage('状态已经改变，请刷新');
      Exit;
    end ;
    if  not DM.ADS831.IsEmpty then
    begin
//      if EmployeeStatusCheck(vEmpl_ptr,vNUMBER) then
//      begin
//        Exit;
//      end;
      with DM.tmp do
      begin
        Close;
        SQL.Text := 'select RKEY,EMPL_CODE,EMPLOYEE_NAME from data0005 where ACTIVE_FLAG=''Y''';
        Open;
      end;
      if DM.tmp.Locate('rkey',StrToInt(vEmpl_ptr),[])=False   then
      begin
        ShowMessage('没有找到你的雇员信息，无法添加！！！');
        Exit;
      end;
      vEMPLOYEE_NAME:=DM.tmp.Lookup('rkey',StrToInt(vEmpl_ptr),'EMPLOYEE_NAME')   ;

      NowDate:=getsystem_date(DM.tmp,0);

      try
        DM.ADOConnection1.BeginTrans;
        with DM.tmp do
        begin
          Close;
          if DM.ADS831.FieldByName('StarMainTime').IsNull then    //如果 '保养开始时间'是空，获取当前数据库服务器的时间
            SQL.Text := 'update data0831 set rkey832 =3,MainImpl='+QuotedStr(vEMPLOYEE_NAME)+',StarMainTime='+        //将状态改为“已执行 ”
            QuotedStr(FormatDateTime('yyyy-MM-dd H:mm:ss',NowDate))+' where rkey='+dm.ADS831rkey.AsString
          else
            SQL.Text := 'update data0831 set rkey832 =3,MainImpl='+QuotedStr(vEMPLOYEE_NAME)+' where rkey='+dm.ADS831rkey.AsString;
          ExecSQL;
        end;

        with DM.tmp do
        begin
          Close;                                      //自动添加维修受理的维修人员记录。
          SQL.Text:='insert into data0848(Work_ptr,WorkDate,BeginTime,Empl_ptr,Status)values('
          +DM.ADS831rkey.AsString+',CONVERT(VARCHAR(10),GETDATE(),120),'
          + QuotedStr(FormatDateTime('yyyy-MM-dd H:mm:ss',NowDate))
          +','+vEmpl_ptr+','+'3' +')' ;
          ExecSQL;
        end;
        DM.ADOConnection1.CommitTrans;
      except
        on e:Exception do
        begin
          DM.ADOConnection1.RollbackTrans;
          ShowMessage('提交失败！'+#13#10+e.Message);
        end;
      end;
    end;
    BtnRefreshClick(Self);
  finally
    Screen.Cursor := crDefault;
  end;


end;

procedure Tfrm_main.N4Click(Sender: TObject);
begin
  if messagebox(Self.Handle,'你确定要开始保养吗？','询问',MB_yesno+MB_iconquestion)=idNo then
    Exit ;
  StartMaintenance(user_ptr);
end;

procedure Tfrm_main.Acceptanceby(UserKey: string);
begin
  if  Self.find_error(dm.ADS831rkey.Value,dm.ADS831RKEY832.Value) then
  begin
    ShowMessage('状态已经改变，请刷新');
    Exit;
  end;
  with dm.tmp do
  begin
    Close;
    SQL.Text :='update data0831 set rkey832=2,MainAcce_UserPtr= '+UserKey+ ' where rkey='+dm.ADS831rkey.AsString;
    ExecSQL;
  end;
  BtnRefreshClick(Self);
end;

procedure Tfrm_main.N9Click(Sender: TObject);
begin
  if (StrToInt(vprev) in[2,3,4])=False then
  begin
    ShowMessage('你没有验收的权限！');
    Exit;
  end;
  if messagebox(Self.Handle,'你确定要验收通过吗？','询问',MB_yesno+MB_iconquestion)=idNo then
    Exit ;
  Acceptanceby(rkey73);
end;



end.
