SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[employee_station_turn_rule]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[employee_station_turn_rule](
	[rkey] [int] IDENTITY(1,1) NOT NULL,
	[departmentid] [int] NULL,
	[Positionid] [int] NULL,
	[circle] [int] NULL CONSTRAINT [DF_employee_station_turn_rule_circle]  DEFAULT ((0)),
	[visible] [int] NULL CONSTRAINT [DF_employee_station_turn_rule_visible]  DEFAULT ((1)),
	[remark1] [nvarchar](50) NULL,
 CONSTRAINT [PK_employee_station_turn_rule] PRIMARY KEY CLUSTERED 
(
	[rkey] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[employee_station_turn_rule]') AND name = N'IX_employee_station_turn_rule')
CREATE UNIQUE NONCLUSTERED INDEX [IX_employee_station_turn_rule] ON [dbo].[employee_station_turn_rule] 
(
	[departmentid] ASC,
	[Positionid] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[employee_station_turn_remark]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[employee_station_turn_remark](
	[rkey] [int] IDENTITY(1,1) NOT NULL,
	[employeeid] [int] NULL,
	[departmentid] [int] NULL,
	[Positionid] [int] NULL,
	[startdate] [datetime] NULL,
	[enddate] [datetime] NULL,
	[oper_0005] [int] NULL,
	[operate_date] [datetime] NULL,
	[extra_month] [int] NULL,
	[extra_remark] [nvarchar](1000) NULL,
	[visible] [bit] NULL CONSTRAINT [DF_employee_station_turn_remark_visible]  DEFAULT ((1)),
 CONSTRAINT [PK_employee_station_turn_remark] PRIMARY KEY CLUSTERED 
(
	[rkey] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[employee_station_turn_remark]') AND name = N'IX_employee_station_turn_remark')
CREATE UNIQUE NONCLUSTERED INDEX [IX_employee_station_turn_remark] ON [dbo].[employee_station_turn_remark] 
(
	[employeeid] ASC,
	[departmentid] ASC,
	[Positionid] ASC,
	[startdate] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[hrsp_emp_turn]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'









CREATE procedure [dbo].[hrsp_emp_turn]
 AS
BEGIN
	---select * from  dbo.employee_station_turn_rule
	---select *  from   dbo.employee_station_turn_remark
--- exec  [dbo].[hrsp_emp_turn]


-----------------------------------
declare @begintime_a datetime
declare @begintime_b datetime
declare @begintime_c datetime


if exists 
(select * from tempdb.dbo.sysobjects 
where id = object_id(N''tempdb..#temptemp'') and type=''U'')
drop table #temptemp
 
if exists 
(select * from tempdb.dbo.sysobjects 
where id = object_id(N''tempdb..#temptemp_mir'') and type=''U'')
drop table #temptemp_mir

select a.rkey,a.departmentid,ondutytime,ondutytime as begindate,
datediff(month,a.ondutytime,getdate()) as workage,
position,b.circle,
datediff(month,a.ondutytime,getdate()) as position_keeptime   
into #temptemp
from employeemsg  a
join (
select departmentid,positionid,circle
from  employee_station_turn_rule 
where circle>0 ) b
on a.departmentid=b.departmentid 
and a.position=b.positionid
where a.status=1

select * into #temptemp_mir
from #temptemp
-- select * from #temptemp_mir
 
declare @employeeid int
declare @departmentid int
declare @positionid int
declare @ondutytime datetime
declare @workage int
declare @circle int
declare @position_keeptime int
 
declare cur cursor
for select rkey,departmentid,position,ondutytime,
workage,circle,position_keeptime from #temptemp_mir
open cur
fetch next from cur
into @employeeid,@departmentid,@positionid,@ondutytime,
@workage,@circle,@position_keeptime
-----select * from datadetail where dictid=7 调动，复职
while @@fetch_status=0
begin

	set @begintime_a=@ondutytime
	set @begintime_b=@ondutytime

	if exists (select * from  dbo.employee_alteration
              where  employeeid=@employeeid  and
              type in (select rkey from datadetail where dictid=7)
              and new_departmentid=@departmentid
              and alterdate>@ondutytime)
	begin
		set @begintime_a=
		(select top 1 alterdate from employee_alteration 
			where employeeid=@employeeid 
            and  type in (select rkey from datadetail where dictid=7)
            and new_departmentid=@departmentid
			order by alterdate desc
		)
	end

	if exists (select * from  dbo.employee_alteration
              where  employeeid=@employeeid  and
              type in (select rkey from datadetail where dictid=7)
              and new_position=@positionid
              and alterdate>@ondutytime)
	begin
		set @begintime_b=
		(select top 1 alterdate   from employee_alteration 
			where employeeid=@employeeid 
            and  type in (select rkey from datadetail where dictid=7)
            and new_position=@positionid
			order by alterdate desc
		)
	end 
set @begintime_c=@ondutytime

if @begintime_a>=@begintime_b
begin
   if @begintime_a>@ondutytime
     begin
       set @begintime_c=@begintime_a
     end
end 
if @begintime_b>@begintime_a
begin
   if @begintime_b>@ondutytime
     begin
       set @begintime_c=@begintime_b
     end
end 

update #temptemp
set position_keeptime=datediff(month,@begintime_c,getdate()),
    begindate=@begintime_c
from #temptemp 
where rkey=@employeeid

---delete from jshr..eatcardsource_02  where reason=''auto''
fetch next from cur
into @employeeid,@departmentid,@positionid,@ondutytime,
@workage,@circle,@position_keeptime

end

CLOSE cur
DEALLOCATE cur

--- select * from #temptemp 
--- order by  ( position_keeptime- workage)

update employee_station_turn_remark
set visible=0
from employee_station_turn_remark
where rkey not  in 
(select a.rkey from employee_station_turn_remark a join #temptemp b on a.employeeid=b.rkey
 and a.departmentid=b.departmentid and a.positionid=b.position and a.startdate=b.begindate )

update employee_station_turn_remark
set visible=1
from employee_station_turn_remark
where rkey  in 
(select a.rkey from employee_station_turn_remark a join #temptemp b on a.employeeid=b.rkey
 and a.departmentid=b.departmentid and a.positionid=b.position and a.startdate=b.begindate )



select c.departmentname,c.employeecode,c.chinesename,c.position_item,
(
cast((a.workage/12) as nvarchar(20))+''年零''+
 cast ((a.workage%12) as nvarchar(20))+''个月'' 
)as workyear,
a.*,
(
cast((a.position_keeptime/12) as nvarchar(20))+''年零''+
 cast ((a.position_keeptime%12) as nvarchar(20))+''个月'' 
)as position_keeptime_char,
isnull(b.extra_month,0) as extra_month,
(isnull(b.extra_month,0)+circle) as remain_month,
(isnull(b.extra_month,0)+circle-position_keeptime ) as month_left,
extra_remark
-----into xwj20131130
from #temptemp a
left join employee_station_turn_remark b
on a.rkey=b.employeeid and a.departmentid=b.departmentid 
and a.begindate=b.startdate and a.position=b.positionid
join v_employeemsg c on a.rkey=c.rkey
order by (isnull(b.extra_month,0)+circle-position_keeptime )


--- select @begintime_a

---drop table #temptemp 
drop table #temptemp_mir

end 
--- 
----











END
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_employee_station_turn_remark_datadepartment]') AND parent_object_id = OBJECT_ID(N'[dbo].[employee_station_turn_remark]'))
ALTER TABLE [dbo].[employee_station_turn_remark]  WITH CHECK ADD  CONSTRAINT [FK_employee_station_turn_remark_datadepartment] FOREIGN KEY([departmentid])
REFERENCES [dbo].[datadepartment] ([rkey])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_employee_station_turn_remark_datadetail]') AND parent_object_id = OBJECT_ID(N'[dbo].[employee_station_turn_remark]'))
ALTER TABLE [dbo].[employee_station_turn_remark]  WITH CHECK ADD  CONSTRAINT [FK_employee_station_turn_remark_datadetail] FOREIGN KEY([Positionid])
REFERENCES [dbo].[datadetail] ([rkey])
ON DELETE CASCADE
GO
IF NOT EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_employee_station_turn_remark_employeemsg]') AND parent_object_id = OBJECT_ID(N'[dbo].[employee_station_turn_remark]'))
ALTER TABLE [dbo].[employee_station_turn_remark]  WITH CHECK ADD  CONSTRAINT [FK_employee_station_turn_remark_employeemsg] FOREIGN KEY([employeeid])
REFERENCES [dbo].[employeemsg] ([rkey])
ON DELETE CASCADE
GO
